#include <stdlib.h>
#include <stdio.h>
#include "stm32f4xx_hal.h"
#include "User/L3/InfraredSensor.h"
#include "User/L2/Comm_Datalink.h"
#include "FreeRTOS.h"
#include "timers.h"

#define IR_PIN GPIO_PIN_7
#define IR_PORT GPIOA

// Remove problematic timer definitions
// extern TIM_HandleTypeDef TIMx;
// extern TIM_HandleTypeDef htim;

volatile uint8_t irSignalState = 0;

// Simplified initialization for GPIO input
void InfraredSensor_Init() {
    GPIO_InitTypeDef GPIO_InitStruct = {0};

    // Configure PA7 as simple GPIO input
    GPIO_InitStruct.Pin = IR_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(IR_PORT, &GPIO_InitStruct);
}

// Simplified reading function
uint8_t InfraredSensor_ReadSignal() {
    return HAL_GPIO_ReadPin(IR_PORT, IR_PIN);
}

// FreeRTOS timer callback function
void RunIRSensor(TimerHandle_t xTimer) {
    uint8_t irValue = InfraredSensor_ReadSignal();

    // Send the sensor reading
    send_sensorData_message(Infrared, (uint16_t)irValue);

    // Update global state if needed
    irSignalState = irValue;
}
